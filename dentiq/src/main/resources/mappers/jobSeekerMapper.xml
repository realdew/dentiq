<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dentiq.api.repository.JobSeekerMapper">

	<select id="getResumeByUserId" resultType="dentiq.api.model.Resume">
		select * from USER_RESUME where USER_ID=#{userId}
	</select>
	<select id="getResumeById" resultType="dentiq.api.model.Resume">
		select * from USER_RESUME where ID=#{resumeId}
	</select>
	<insert id="insertResume" useGeneratedKeys="true" keyProperty="id" parameterType="dentiq.api.model.Resume">
		insert into USER_RESUME (
			USER_ID, TITLE,
			ATTR_JSON,
			SALARY_WANTED, SALARY_WANTED_TEXT,
			ROLE_WANTED, ROLE_WANTED_TEXT,
			APPLY_LOCATION_CODE_JSON,
			EDU_LEVEL, EDU_STATUS, EDU_SCHOOL_NAME, EDU_MAJOR, EDU_START_YYYYMM, EDU_END_YYYYMM,
			CAREER_JSON, LICENSE_JSON,
			CONFIRM_RECOMMENDATION,
			USE_YN
		) values (
			#{userId}, #{title}, 
			#{attrJson},
			#{salaryWanted}, #{salaryWantedText},
			#{roleWanted}, #{roleWantedText},
			#{applyLocationCodeJson},
			#{eduLevel}, #{eduStatus}, #{eduSchoolName}, #{eduMajor}, #{eduStartYYYYMM}, #{eduEndYYYYMM},			
			#{careerJson}, #{licenseJson},
			#{confirmRecommendation},
			'Y'
		)
	</insert>
	<update id="updateResume" parameterType="dentiq.api.model.Resume">
		update USER_RESUME set
			TITLE=#{title},
			ATTR_JSON=#{attrJson},
			SALARY_WANTED=#{salaryWanted}, SALARY_WANTED_TEXT=#{salaryWantedText},
			ROLE_WANTED=#{roleWanted}, ROLE_WANTED_TEXT=#{roleWantedText},
			APPLY_LOCATION_CODE_JSON=#{applyLocationCodeJson},
			EDU_LEVEL=#{eduLevel}, EDU_STATUS=#{eduStatus}, EDU_SCHOOL_NAME=#{eduSchoolName}, EDU_MAJOR=#{eduMajor}, EDU_START_YYYYMM=#{eduStartYYYYMM}, EDU_END_YYYYMM=#{eduEndYYYYMM},
			CAREER_JSON=#{careerJson}, LICENSE_JSON=#{licenseJson},
			CONFIRM_RECOMMENDATION=#{confirmRecommendation}
		where USER_ID=#{userId}
	</update>



	<!--  관심지역 -->
	<select id="listConcernedLocationCodes" resultType="dentiq.api.model.LocationCode">
		select LOCATION_CODE
		from USER_CONCERNED_LOCATION
		where USER_ID=#{userId}
	</select>
	<insert id="insertConcernedLocationCodeList">
		insert into USER_CONCERNED_LOCATION (USER_ID, LOCATION_CODE)
		values 
		<foreach item="locationCode" collection="locationCodeList" separator=",">
			( #{userId}, #{locationCode} )
		</foreach>
	</insert>
	<delete id="deleteConcernedLocationCodeList">
		delete from USER_CONCERNED_LOCATION where USER_ID=#{userId}
	</delete>
	
	
	
	
	<!--  스크랩 공고 -->
		
	<insert id="insertScrappedJobAd">
		insert into USER_SCRAPPED_JOB_AD (USER_ID, JOB_AD_ID, MEMO)
		values ( #{userId}, #{jobAdId}, #{memo})
	</insert>
	<update id="updateScrappedJobAd">
		update USER_SCRAPPED_JOB_AD set MEMO=#{memo}, LAST_MOD_DT=current_timestamp
		where USER_ID=#{userId} and JOB_AD_ID=#{jobAdId}
	</update>
	<delete id="deleteScrappedJobAd">
		delete from USER_SCRAPPED_JOB_AD where USER_ID=#{userId} and JOB_AD_ID=#{jobAdId}
	</delete>
	
	<select id="listScrappedJobAdIds" resultType="Long">
		select JOB_AD_ID from USER_SCRAPPED_JOB_AD where USER_ID=#{userId}
		order by LAST_MOD_DT;
	</select>
	
		
	<select id="listScrappedJobAds" resultType="dentiq.api.model.JobAd">
		select J.*, S.LAST_MOD_DT as LAST_MOD_DT
		from USER_SCRAPPED_JOB_AD S, JOB_AD_VIEW J
		where S.JOB_AD_ID=J.ID and S.USER_ID=#{userId} and J.USE_YN='Y'
		order by LAST_MOD_DT;
	</select>
	


	<!--  관심 병원의 공고들을 리스팅한다.  -->	
	<select id="listInterestingHospitalJobAd" resultType="dentiq.api.model.JobAd">
		select J.*
		from JOB_AD_VIEW J, USER_INTEREST_HOSPITAL H
		where
			H.USER_ID=#{userId}
			and J.HOSPITAL_ID=H.HOSPITAL_ID
			<!--  and J.HIRING_END_DATE >= DATE_FORMAT(now(), '%Y%m%d') -->
			and J.USE_YN='Y'
	</select>
	
	<select id="listInterestingHospitalIds" resultType="Integer">
		select HOSPITAL_ID
		from USER_INTEREST_HOSPITAL
		where USER_ID=#{userId}
	</select>
	
	<insert id="insertInterestingHospital">
		insert into USER_INTEREST_HOSPITAL(USER_ID, HOSPITAL_ID) values (#{userId}, #{hospitalId})
	</insert>
	<delete id="deleteInterestingHospital">
		delete from USER_INTEREST_HOSPITAL where USER_ID=#{userId} and HOSPITAL_ID=#{jobAdId}
	</delete>

	
	<!--  지원 공고 -->
	<select id="listAppliedJobAdIdAll" resultType="dentiq.api.model.AppliedJobAdInfo">
		select JOB_AD_ID, APPLY_WAY from USER_APPLY
		where USER_ID=#{userId}
	</select>
	<insert id="insertApplyJobAdId">
		insert into USER_APPLY(USER_ID, JOB_AD_ID, APPLY_WAY) values (#{userId}, #{jobAdIdWithType.jobAdId}, #{jobAdIdWithType.applyWay})
	</insert>
	<delete id="deleteApplyJobAdId">
		delete from USER_APPLY where USER_ID=#{userId} and JOB_AD_ID=#{jobAdIdWithType.jobAdId}
	</delete>
	
	<select id="listApplyJobAd" resultType="dentiq.api.model.JobAd">
		select J.*
		from JOB_AD_VIEW J, USER_APPLY A
		where
			A.USER_ID=#{userId}
			and J.ID=A.JOB_AD_ID
			<!--  and J.HIRING_END_DATE >= DATE_FORMAT(now(), '%Y%m%d') -->
			and J.USE_YN='Y'
	</select>
	
	<select id="getAppliedJobAdId" resultType="dentiq.api.model.AppliedJobAdInfo">
		select JOB_AD_ID, APPLY_WAY from USER_APPLY
		where USER_ID=#{userId} and JOB_AD_ID=#{jobAdId} and APPLY_WAY=#{applyWay} and CANCEL_YN='N'
	</select>


	<!--  면접 제안 -->
	<select id="listOfferedJobAd" resultType="dentiq.api.model.JobAd">
		select J.*
		from JOB_AD_VIEW J, HOSPITAL_OFFER O
		where
			O.USER_ID=#{userId}
			and J.ID=O.JOB_AD_ID
			<!--  and J.HIRING_END_DATE >= DATE_FORMAT(now(), '%Y%m%d') -->
			and J.USE_YN='Y'
	</select>

</mapper>

